{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 CourierNewPSMT;}{\f1\fmodern\fcharset0\fprq2 CourierNewPS-ItalicMT;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \ltrch\loch {\f0\fs24\b0\i0 Assume two collaborating software agents. Each agent addresses a part of reality, here denoted the agent\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s }{\f1\fs24\b0\i1 application domain}{\f0\fs24\b0\i0 . Collaboration implies that the agents\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92 application domains overlap. In terms of formal semantics, an application domain is abstracted into a conceptualisation as a set-based }{\f1\fs24\b0\i1 Domain of Interpretation}{\f0\fs24\b0\i0  (DoI), denoted \\concept\{D\}. We assume that each agent decides on its own conceptualisation and its own ontological representation which is built from a unique alphabet $\\Sigma$. }{\field{\*\fldinst HYPERLINK "scrivcmt://6E2278F2-BBD1-4FF3-A4E2-4F68C003722E"}{\fldrslt\f0\fs24\b0\i0 For example, consider ...}}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Hence, two DoI\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92s with two unique ontologies emerge: $\\intn: \\ont\{O\} \\to \\concept\{D\}$, and $\\intn\u8217\'92: \\ont\{O\}\u8217\'92 \\to \\concept\{D\}\u8217\'92$, where $\\Sigma_\{\\ont\{O\}\} \\cap \\Sigma_\{\\ont\{O\}\u8217\'92\} = \\varnothing$ whereas $\\concept\{D\} \\cap \\concept\{D\}\u8217\'92 \\neq \\varnothing$. Our objective is to facilitate any pair of collaborating agents by providing a generic semantic mediation: a syntactic replacement between terms from two distinct alphabets, which is valid (does not induce phantom semantics), always terminating, and independent on the order with which the terms are replaced.}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The main idea of the paper is to identify, for all logical contexts that originate from the source and target ontological concepts, their relations and all alignment correspondences that are allowed between source and target ontological concepts, the most accurate valid transcription possible, or NULL if none is present. These so-called transcription contexts are then introduced as constraints for an abstract rewriting system, resulting in a conditional term rewriting system (cTRS) as the core engine for a semantic mediator. Our contributions to the semantic mediation process are then:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 1. An }{\f1\fs24\b0\i1 inductive model}{\f0\fs24\b0\i0  that describes any logical context that might occur between collaborating agents, in terms of classes, relationships and correspondences (\\cref\{an-inductive-transcription-model\});}
\par\plain {\f0\fs24\b0\i0 1. A }{\f1\fs24\b0\i1 valid transcription}{\f0\fs24\b0\i0  for each (class-based) transcription context that have been investigated and resolved. Due to space limitations we only present a few examples here -- the full set of valid transcriptions are available at [some web address | a \loch\af0\hich\af0\dbch\af0\uc1\u8220\'93data\u8221\'94 set] (\\cref\{valid-transcriptions\});}
\par\plain {\f0\fs24\b0\i0 1. A }{\f1\fs24\b0\i1 mathematical specification of a mediator}{\f0\fs24\b0\i0 , founded on a conditional term rewriting system (\\cref\{a-ctrs-as-mediator\});}
\par\plain {\f0\fs24\b0\i0 1. An investigation into the }{\f1\fs24\b0\i1 confluence property}{\f0\fs24\b0\i0  of the inductive model, to assure that the mediator is properly terminating (\\cref\{the-confluence-property-of-the-mediator\});}
\par\plain {\f0\fs24\b0\i0 1. (}{\field{\*\fldinst HYPERLINK "scrivcmt://74050CC8-0B79-4814-9DA2-2010E3F06727"}{\fldrslt\f0\fs24\b0\i0 Finally}}{\f0\fs24\b0\i0 , an }{\f1\fs24\b0\i1 evaluation}{\f0\fs24\b0\i0  of the mediator by providing an implementation that is based on a generic rewriting logic framework, the Maude 2.0 System [@Clavel2003a], (\\cref\{mediator validation\})). }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 <!-- einde lijst -->}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 The }{\f1\fs24\b0\i1 concepts}{\f0\fs24\b0\i0  in the ontologies are of certain type, denoted $\\varepsilon$, and is considered one of the following:}
\par\plain {\f0\fs24\b0\i0 \\begin\{equation\}}
\par\plain {\f0\fs24\b0\i0 \\varepsilon \\; ::= \\; \\token\{C\} \\; | \\; \\token\{R\} \\; | \\; \\token\{P\} \\; | \\; \\token\{\\iota\}}
\par\plain {\f0\fs24\b0\i0 \\end\{equation\}}
\par\plain {\f0\fs24\b0\i0 where:}
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 * \\token\{C\} denotes the Class concept type, the interpretation of which results in a set $\\concept\{C\} \\subseteq \\concept\{D\}$ of individuals, $\\forall \\token\{c\} \\sqsubseteq \\token\{C\}: \\intn(\\token\{c\}) \\subseteq \\concept\{C\}$, where ~~$\\lhd$ denotes the instance-of relation between an individual concept (left-hand side, here a particular class) and its type $\\varepsilon$ (right-hand side, here a Class type)~~;}
\par\plain {\f0\fs24\b0\i0 * \\token\{R\}, \\token\{P\} and \\token\{\\iota\} denote the Relation concept type, the Property concept type, and the Instance concept type, respectively, with their own interpretation in \\concept\{D\}. For the sake of simplicity, we will here limit ourselves to transcribing a Class concept, only. }
\par\plain \f0\fs24\b0\i0
\par\plain {\f0\fs24\b0\i0 Concepts are thus atomic elements in an ontology, and here only of type Class. }
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0
\par\plain \f0\fs24\b0\i0}