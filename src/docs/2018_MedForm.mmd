---
title:  'Semantic mediation: from alignment relations to data transcriptions'  
subtitle:   
author:  
- name: Paul Brandt  
  affiliation: Eindhoven University of Technology; Netherlands Organization of Applied Scientific Research TNO, Den Haag, The Netherlands   
- name: Marten van Sinderen  
  affiliation: University of Twente, Enschede, The Netherlands  
- name: Twan Basten  
  affiliation: Eindhoven University of Technology, Eindhoven, The Netherlands 
version:   
category:   
ack: This work was supported by TNO through the MSoBD program.    
tags: semantic interoperability, semantic mediation, ontology alignment, term rewriting, cTRS, data transcription   
bibliography: src/bib/CitedByMe-2018_MedForm.bib  
csl: templates/my-basic-reference-style.csl  
abstract: |  
  
  *Background & Problem:* Ontologies are considered a means to represent the semantics of a software agent. Semantic reconciliation, and the resulting ontology alignment, has shown instrumental for achieving semantic interoperability (sIOP) between software agents. An ontology alignment expresses inter-ontological concept correspondences, which basically denote set relationships to hold between a pair of concepts, e.g., *subset*, *superset*, *overlap*, and more. This is in clear contrast with semantic mediation which, by transcribing the data expressed in the native language of one agent into the native language of the other agent, essentially implies an equivalence relation to hold between aligned concepts. 
   
  *Motivation:* Without solving this semantic discrepancy between the *intended* alignment correspondences that are specified, e.g., subset, superset, disjointness, and the transcription that is *applied*, i.e., equivalence, alignment based mediation will always fail to achieve its purpose, viz. translating concepts between ontologies without introducing phantom semantics. The implementation of a generic mediation component that adheres to the correspondences as intended by the alignment, would be key to the sIOP bridge between collaborating agents.  
  
  *Objective:* To investigate the contexts under which the applied transcription, despite its clear discrepancy with the intended correspondence, *does* represent a faithful semantic mediation between software agents.
  
  *Method:* We consider contexts that emerge from the ontological relations that exist (i) with the source concept and (ii) the aligned target concept, and (iii) the specified correspondence between the concepts. For each context we investigate whether the suggested target concept represents a faithful semantic transcription, or not. On formulating these contexts in formal logics, collaboratively they describe the foundation for a faithful semantic mediation model that is generic with respect to the applied pair of ontologies and their inter-ontological alignment. We then investigate the applicability of a conditional term rewriting system as implementation for a generic semantic mediator.  
  
  *Results & Consequences:* Independently from their underlying syntax, and irrespective the case-specific ontologies and alignments, data can be transcribed and exchanged between software agents without introducing phantom semantics. Thus sIOP can now be *specified* by inter-ontological alignments, as opposed to *implemented* by specific data wrappers case-by-case, providing for a huge improvement in flexibility, consistency and reuse of data, and a significant reduction in time-to-market. The generic characteristic of the mediator will allow to engineer infrastructural semantic standards and services to achieve sIOP.
  
...

# Valid transcriptions #
The main demand for the mediation is to guarantee that it either produces a semantic valid transcription, or $\token{null}$ when phantom semantics are induced. We formulate a generic transcription as a function $T_{\ctx} : \ont{O} \to \ont{O}’$, and denote a valid transcription as $e \vldtranscript{\ctx} e’$, indicating that concept $e \in \ont{O}$ can be replaced by concept $e’ \in \ont{O}’$ under the specified transcription context $\ctx$ without inducing phantom semantics. When the context is reduced to the correspondence relation $\theta$ only, we write $T_{(\theta)}$ and $e \vldtranscript{(\theta)} e’$. The semantic validity of a transcription is the result of two cooperating mechanisms:

1. Firstly, as indicated in \cref{eq:transcription-context}, the transcription depends on transcription context $\ctx_n$, the correspondence $\mu_n = \tuple{ e_n, e_n’, \theta_n }$ as defined in \cref{eq:correspondence}, and the (valid) transcription result $e_{n-1} \vldtranscript{(\theta_{n-1})} e_{n-1}’$. The correspondence $\mu_n$ is prescribed and assumed to represent a semantic valid correspondence relation between both concepts;
1. Secondly, the transcription result $T_{\ctx_n}(e_n)$ represents a new theory that is added to $\ont{O}’$. This theory is evaluated by use of the target’s agent interpretation function $\intn’: \ont{O}’ \to \concept{D}’$. The semantic validity of the transcription, therefore, is dependent on whether the transcribendum $\intn(e_n)$ addresses the same individuals in the DoI as the transcription result $\intn’(T_{\ctx_n}(e_n))$. 

Since the transcription context provides for all potential logical circumstances that can occur, we can resolve the question whether or not a transcription is valid generically and independently from the particular ontologies and alignments that are applied by the software agents, as follows:

\begin{mmdef}[Semantic validity of a transcription]\label{def:valid-transcription}
Assume transcribendum $e_n \in \ont{O}$, transcriptum $e_n’ \in \ont{O}’$, correspondence $\mu_n = \tuple{ e_n, e_n’, \theta_n }$, transcription context $\ctx_n = \pair{r, \theta_n, r', \ctx_{n-1}}$ and a semantic valid transcription at the lower inductive level, $e_{n-1}\vldtranscript{\ctx_{n-1}}$. We denote the transcription result as $T_{\ctx_n}(e_n)$. Then, we call the transcription \emph{semantically valid} iff:\[
\intn’(T_{\ctx_n}(e_n)) \subseteq \intn(e_n)
\]
\end{mmdef}
In other words, a transcription is valid if all individuals that potentially belong to the set represented by $e_n$ also belong to the set that is constructed by $T_{\ctx_n}(e_n)$. The question at hand then becomes how to establish $T_{\ctx_n}(e_n)$? Clearly, the transcription result can be represented inductively as a logical combination of $e_n’$, $e_{n-1}’$ and $\hat{e}_{n-1}’$. Our task is then to traverse the multidimensional space that is spanned by the transcription context, and for each point in that space consider when $\intn’(T_{\ctx_n}(e_n)) \subseteq \intn(e_n)$ holds, viz. which logical combination of $e_n’$, $e_{n-1}’$ and $\hat{e}_{n-1}’$ implies the set that maximally equals $\intn(e_n)$. In the worst case this is not possible and the result is the empty set, denoted $\ntsa$. We first consider transcriptions for atomic correspondences, and in the subsequent subsections we extend it to cover several example cases of the full transcription context.
## table in table test ##
Different to the previous section and tables, though, we now include all four relations $\set{\overlete, \overlinc, \displete, \disjoinc}$ and their valid transcriptions, as an additional column. Each cell then becomes a $2 \times 2$ quadrant, each one denoting the valid transcription for one of the four relations.  

\begin{table}[h]
  \centering
  \caption{Transcribing $c_{n-1}$ for case \ref{fig:medcxt-supinc-mm} (a), i.e., under context $\ctx_n = \pair{\sqsupset, \theta_n, \pair{\sqsupset, r’}, \ctx_{n-1}}$.}
  \label{tab:transcr_cn-1_ctxn_djt_a}
  \begin{tabular}{cccrlcrlrlrlrlrl}
    \toprule
    & \bc{Context $\ctx_{n-1}$} & \bc{$r’$} & & \multicolumn{10}{c}{$\theta_n$} \\ \cmidrule(r){2-3} \cmidrule{7-16} 
    & $c_{n-1} \vldtranscript{\ctx_{n-1}}$  & $\theta_{n-1}$ & & & 
        & \bc{$\sqsubset$} & \bc{$\equiv$}   & \bc{$\sqsupset$} & \bc{$\overlap$}  & \bc{$\disj$} \\ 
    \cmidrule(lr){2-2} \cmidrule(lr){3-3} \cmidrule(lr){4-5} \cmidrule(lr){7-8} \cmidrule(lr){9-10} \cmidrule(lr){11-12} \cmidrule(lr){13-14} \cmidrule(lr){15-16}     
    & \br{$c_{n-1}’$} & \br{$\sqsubset$} & $\displete$ & $\disjoinc$ & 
        & - & - & - & - & \bc{\br{$c_{n-1}’$}} & \bc{\br{$c_{n-1}’$}} & \bc{\br{$c_{n-1}’$}} \\ 
    &                 &                  & $\overlete$ & $\overlinc$ & 
        & \bc{$c_{n-1}\sqcap c_n’$} & - & - & \bc{} & \bc{} & \bc{}  \\     
    & \br{$c_{n-1}’$} & \br{$=$} & $\displete$ & $\disjoinc$ & 
        & - & - & - & - & \bc{\br{$c_{n-1}’$}} & \bc{\br{$c_{n-1}’$}} & \bc{\br{$c_{n-1}’$}} \\ 
    &                 &                  & $\overlete$ & $\overlinc$ & 
        & - & - & - & - & \bc{} & \bc{} & \bc{}  \\     
    & \br{$\ntsa_n$} & \br{$\sqsupset$} & $\displete$ & $\disjoinc$ & 
        & - & - & - & - & \bc{\br{$\top$}} & \bc{\br{$\top$}} & $\top$ & $\top$ \\ 
    &                 &                  & $\overlete$ & $\overlinc$ & 
        & - & - & - & - & \bc{} & \bc{} & - & -  \\ 
   1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 & 13 & 14 & 15 & 16 \\ \bottomrule
  \end{tabular}
\end{table}



# References {-} 