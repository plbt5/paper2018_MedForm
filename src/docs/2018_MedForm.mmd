---
title:  'Semantic medation: from alignment relations to data transcriptions'  
subtitle:   
author:  
- name: Paul Brandt  
  affiliation: Eindhoven University of Technology; Netherlands Organization of Applied Scientific Research TNO, Den Haag, The Netherlands   
- name: Marten van Sinderen  
  affiliation: University of Twente, Enschede, The Netherlands  
- name: Twan Basten  
  affiliation: Eindhoven University of Technology, Eindhoven, The Netherlands 
version:   
category:   
ack: This work was supported by TNO through the MSoBD program.    
tags: semantic interoperability, semantic mediation, ontology alignment, term rewriting, cTRS, data transcription   
bibliography: src/bib/CitedByMe-2018_MedForm.bib  
csl: templates/my-basic-reference-style.csl  
abstract: |  
   
    *Background/Problem:* Ontologies are considered a means to represent the semantics of a software agent. Semantic reconciliation, and the resulting ontology alignment, has shown instrumental for achieving semantic interoperability (sIOP) between software agents. An ontology alignment expresses inter-ontological concept correspondences, which basically denote set relationships to hold between a pair of concepts, e.g., *subset*, *superset*, *overlap*, and more. This is in clear contrast with semantic mediation which, by transcribing the data expressed in the native language of one agent into the native language of the other agent, essentially implies an equivalence relation to hold between aligned concepts. 
 
    *Motivation:* Without solving this semantic discrepancy between the *intended* alignment correspondences that are specified, e.g., subset, superset, disjointness, and the correspondence that results from the applied transcription, viz. equivalence, alignment based mediation will always fail to achieve its purpose, that is, translating concepts between ontologies without introducing phantom semantics. The implementation of a *generic* mediation component that adheres to the correspondences as intended by the alignment, represents the keystone to the sIOP bridge between collaborating agents.  

    *Objective:* We present a mathematical foundation for a faithful semantic mediation that is generic with respect to the applied pair of ontologies and their inter-ontological alignment. We furthermore show how a generic mediator can be efficiently implemented as conditional term rewriting system.  

    *Results & Consequences:* Independently from their underlying syntax, and irrespective the case-specific ontologies and alignments, data can be transcribed and exchanged between software agents without introducing phantom semantics. Thus sIOP can now be *specified* by inter-ontological alignments, as opposed to *implemented* by specific data wrappers case-by-case, providing for a huge improvement in flexibility, consistency and reuse of data, and a significant reduction in time-to-market. The generic characteristic of the mediator will allow to engineer infrastructural semantic standards and services to achieve sIOP.


...

# Introduction #
\begin{synopsis}1 page
100 readers

\begin{enumerate}
 \item Describe the Problem.
 \begin{itemize}
 \item not formal but an intuition 
 \item not everything but 
 \item .. hard enough to be interesting, and
 \item .. simple enough to be solvable
 \end{itemize}
 \item State you claims
 \begin{itemize}
 \item as bullit list with 
 \item forward references to sections where you substantiate them.
 \item Claims should be described such that you can fail their deliverance: "Gosh, if they really can, exciting, I must read on"
 \item Contributions are the properties of the solution.
 \end{itemize}
\end{enumerate}

This list *drives* the paper

\end{synopsis}

Assume two collaborating software agents, exchanging data about their common interest. Each agent addresses a part of reality, here denoted the agent’s *application domain*. Collaboration implies that the agents’ application domains overlap. In terms of formal semantics, an application domain is abstracted into a conceptualisation as a set-based *Domain of Interpretation* (DoI), denoted \concept{D}. Furthermore, a conceptualisation is represented in tokens which, together, form an ontology, denoted \ont{O}. Finally, an interpretation function $\intn$ exists from the ontology to the conceptualisation. We assume that each agent decides on its own conceptualisation and its own ontological representation, the latter being built from a unique alphabet $\Sigma$. For example, consider ...\todo{ brandtp, 12-11-2018 Voorbeeld toevoegen} 

Since each agent decides on its own conceptualisation, two DoI’s with two unique ontologies emerge: $\intn: \ont{O} \to \concept{D}$, and $\intn’: \ont{O}’ \to \concept{D}’$, where $\Sigma_{\ont{O}} \cap \Sigma_{\ont{O}’} = \varnothing$^[Even worse, it can be the case that both ontologies share identical tokens which refer to different concepts in each conceptualisation.] whereas, since the DoI’s overlap, $\concept{D} \cap \concept{D}’ \neq \varnothing$. We assume the existence of (inter-ontological) alignment correspondences that hold between source and target ontological concepts, such as subsumption, disjointness or overlap. We make no assumptions on how the alignment correspondences are established but we do assume their semantic validity. Now consider that a *transcription* essentially implements a replacement of terms. From a semantic perspective term replacement enforces an equivalence to hold between both terms, which is in clear contrast with the prescribed correspondence relations (except for an equivalence correspondence). Consequently, the result of the transcription will induce a difference between how it is actually being interpreted by the target agent and how it was intended to be interpreted according to its correspondence relation. Whether this difference actually results in invalid semantics depends on how the domain of interest have been conceptualised by both agents, and the correspondence relation that is prescribed between them. With invalid semantics we refer to a valuation of a theory that contradicts the state of affairs in the domain of interest. Invalid semantics that are induced by the transcription will be denoted as *phantom semantics*. Note that due to the open world assumption this includes unfaithful valuations that remain open because conclusive data (or source data for their derivation) have vaporised, and vice versa, those that became closed because definitive data (or source data for their derivation) have transpired. In short, phantom semantics are semantics that are transcription-induced and contradict the state of affairs in the domain of interest. 

Our first objective is to facilitate for any pair of collaborating agents a generic semantic mediation: a syntactic replacement between theories from two distinct alphabets, which does not induce phantom semantics, despite the difference between the stated correspondence relation and the actual transcription. Our second objective is to provide for an implementation of such generic semantic mediation, which is always terminating, and remains independent on the order with which the terms are replaced.

The main idea of the paper is to identify, for (i) all logical contexts that originate from the source and target ontological concepts, (ii) including their (intra-ontological) relations, and (iii) all (inter-ontological) alignment correspondences that are possible between source and target ontological concepts, the most accurate valid transcription possible or $\token{null}$ if none is present. We call aspects (i)-(iii) the transcription contexts, and these are introduced as constraints for an abstract rewriting system, resulting in a conditional term rewriting system (cTRS) as the core engine for a semantic mediator. Our contributions to the semantic mediation process are then:

1. An *inductive model* of the transcription context, describing any logical context that might occur between collaborating agents, in terms of classes, relationships and correspondences (\cref{an-inductive-transcription-model});
1. A set of *valid transcriptions* for each transcription context that has been investigated and resolved. Due to space limitations we only present a few examples here -- the full set of valid transcriptions are available at [some web address | a “data” set] (\cref{valid-transcriptions});
1. A *mathematical specification of a mediator*, founded on a conditional term rewriting system (\cref{a-ctrs-as-mediator});
1. An investigation into the *confluence property* of the inductive model, to assure that the mediator is properly terminating (\cref{the-confluence-property-of-the-mediator});
1. (Finally\todo{ brandtp, 9/17/2018 Alleen als ik daar tijdruimte voor vinden kan.} , an *evaluation* of the mediator by providing an implementation that is based on a generic rewriting logic framework, the Maude 2.0 System [@Clavel2003a], (\cref{mediator validation})). 

Before turning to the first of these sections, we will introduce some terminology, as follows.

A *correspondence* denotes a single particular inter-ontological relation, denoted as 
\begin{equation}\label{eq:correspondence}
\mu = \tuple{ e, e’, \theta }
\end{equation}
with $\theta \in \Theta$ specifying the *correspondence relation* that holds between source concept $\token{e} \in \ont{O}$, denoted the *transcribendum*, and the target concept $\token{e’} \in \ont{O}’$, denoted the *transcriptum*. We consider $\Theta \; = \; \{\equiv, \sqsubset, \sqsupset, \disj, \overlap \}$, denoting semantic equivalence, subsumption of, subsumes, disjointness, and overlap, respectively. The correspondence is prescribed and assumed to represent a semantically valid relation between both concepts. We denote an *atomic correspondence *a correspondence where $e$ and $e’$ are atomic elements, i.e., a single concept without considering any (logical or ontological) relation with another concept from its own ontology. The *concepts* in the ontologies are the elements that apply in the ontology. These are of certain type, dependent on the type of logic that is used to formulate the ontology. Although we limit ourselves to description logic, and, for sake of simplicity and available space, to only the classes therein, the principles that we present here are applicable to the other types of elements in description logic, i.e., relations, properties and instances, as well as other type of logic. In the remainder of this paper, *atomic concepts* are then atomic classes from an ontology, whereas *complex concepts* are a logical combination of classes. 


# An inductive transcription model #
When considering ontologies that are based on description logic, the concepts that are identified are dependent on their type, denoted $\varepsilon$, and is considered one of the following:
\begin{equation}\label{eq:concept-type}
\varepsilon \; ::= \; \token{C} \; | \; \token{R} \; | \; \token{P} \; | \; \token{T} \; | \; \token{\iota}
\end{equation}
where:

* \token{C} denotes the *Class* concept type, the interpretation of which results in a set $\concept{C} \subseteq \concept{D}$ of individuals: $\forall \token{c} \lhd \token{C}: \intn(\token{c}) \subseteq \concept{C}$, where $\lhd$ denotes the type-of relation between an individual concept (left-hand side, here a particular class) and its type $\varepsilon$ (right-hand side, here a Class type);
* \token{R}, \token{P}, \token{T} and \token{\iota} denote the *Relation* concept type, the *Property* concept type, the *value type* concept type, and the *Instance* concept type, respectively, with their own interpretation in \concept{D}. For reasons of space and simplicity we do not further elaborate on these concepts.

The above concepts all represent atomic concepts, and are part of correspondence $\mu = \langle e, e’, \theta \rangle$ as formulated by \cref{eq:correspondence}. The atomic patterns of this particular atomic context is depicted in \cref{fig:basic-correspondence} (a) to (f). 

![Atomic contexts, i.e., two ontologies, $\ont{O}$ and $\ont{O’}$, each containing only one atomic concept $e \in \{c, r, p, \iota, t\}$, with correspondence relation $\theta \in \Theta$ to specify how concept $e$ corresponds with its peer $e’$. Note that $\theta$ is a directed relation. Case (a) represents the generic atomic correspondence for classes, types and individuals, depicted by case (d), (e) and (f), respectively. Cases (b) and (c) represent the generic atomic contexts for object relations and property relations, respectively, which are not investigated here.][def:BasicCorrespondence]

Intuitively, in \cref{fig:basic-correspondence}, the atomic context $\ctx_a$ represents the generic atomic correspondence: two ontologies, $\ont{O}$ and $\ont{O’}$, each containing only one atomic concept $e$, with $e \in \{c, r, p, \iota, t\}$, and one correspondence relation $\theta \in \Theta$ to relate concept $e$ with its peer $e’$. In case (a), however, concept $e$ can only be one of $c$, $\iota$ or $t$: when considering concepts that express relations, i.e., case (b) on object relations and case (c) on property relations, a class concept $c$ becomes a necessary part of the atomic context to represent the domain of the relations; similarly, range concepts are necessarily included to the atomic context as well. Furthermore, by including these secondary (domain and range) concepts, secondary correspondence relations are necessary to include in the atomic context as well in order to clarify how the secondary concepts of the source $\ont{O}$ relate with those of the target ontology $\ont{O’}$. When one considers these secondary correspondence relations, i.e., $\theta_c$ and $\theta_t$ from cases (b) and (c) it becomes clear that these are, in fact, atomic correspondences. From this it follows that:

1. indeed case (a) represents the generic atomic correspondence but only for classes, $\tuple{ c, c’, \theta_c}$ as depicted in case (d), types, $\tuple{t, t’, \theta_t}$ as depicted in case (e), and individuals, $\tuple{\iota, c’, \theta_\iota}$ as depicted in case (f);
1. cases (b) and (c) represent what we would like to call the generic atomic context for relations, since apart from the primary atomic correspondence also two secondary atomic correspondences are involved, i.e., three atomic correspondences in total;
1. the generic atomic context of a relation can only be addressed once the transcriptions for the atomic correspondences of cases (d) and (e) are resolved. 

We introduce the local contexts of the transcriptum and transcribendum in their particular ontologies $\ont{O}$ and $\ont{O}’$. Together, we denote this as the *transcription context* that we define inductively as $\ctx_n = \pair{r, \theta_n, r', \ctx_{n-1}}$, with:

* $r, r’ \in \set{\sqsubset, \equiv, \sqsupset, \overlete, \overlinc, \displete, \disjoinc}$, representing a logical relationship between a class pair, with:
    * $r$ and $r’$ part of $\ont{O}$ and $\ont{O}’$, respectively, and 
    * $\displete, \disjoinc$ denote *disjoint and complete*, and *disjoint and incomplete*, whereas 
    * $\overlete, \overlinc$ denote *not disjoint but complete* and *not disjoint and incomplete*, respectively;
* $\theta_n \in \Theta$, the correspondence relation that is assumed to hold between classes $c_n \in \ont{O}$ and $c_n’ \in \ont{O}’$;
* $\ctx_{n-1} = \pair{r, \theta_{n-1}, r’, \ctx_{n-2}}$, viz. the transcription context at the previous induction level. 

We first consider the ontological relationships $r, r’ \in \set{\sqsubset, \equiv, \sqsupset}$. Then, the transcription context is fully described by $\theta_n$, $c_n, r, c_{n-1} \in \ont{O}$ and $c_n’, r’, c_{n-1’} \in \ont{O’}$. This model has been depicted in \cref{fig:gen-class-transc-models}(a). On considering $r, r’ \in \set{\overlete, \overlinc, \displete, \disjoinc}$, we conclude that the completeness part of the relations demands a subsuming class concept that can act as reference for completeness. This model has been depicted in \cref{fig:gen-class-transc-models}(b), where $r, r’ \in \set{\sqsubset, \equiv, \sqsupset}$ relate the reference concept $c_n$ with subclasses $c_{n-1}$ and $\hat{c}_{n-1}$ that bear an (in)completeness relation $\hat{r}$. 

![The class transcription models that support all seven ontological relations. $\theta_n$ denotes the correspondence relation that applies for the current context $\ctx_n = \pair{\hat{r}, \theta_n, \hat{r}', \ctx_{n-1}}$, and $\longmapsto$ denotes the valid transcription under context $\ctx_{n-1}$. Classes $c_n$ and $c_n'$ are implied by class relations $c_{n-1} \hat{r} \hat{c}_{n-1}$ and $c_{n-1}' \hat{r}' \hat{c}_{n-1}'$, respectively.][def:GenClassTranscModels]

Clearly, situation \ref{fig:gen-class-transc-models}(a) is a special case of situation \ref{fig:gen-class-transc-models}(b) since (b) morphs into (a) for $\hat{r} = \equiv$. As a result, we consider the generic case (b) only when investigating a transcription that involves $\hat{r} \text{ or } \hat{r}’ \in \set{\overlete, \overlinc, \displete, \disjoinc}$. 




<!-- Page definitions -->
[def:GenClassTranscModels]: src\images\GenClassTranscModels.png {#fig:gen-class-transc-models width=80%}
[def:BasicCorrespondence]: src\images\BasicCorrespondence.png {#fig:basic-correspondence width=100%}
# Valid transcriptions #
The main demand for the mediation is to guarantee that it either produces a semantic valid transcription, or none or $\token{null}$ when phantom semantics are induced. The semantic validity of a transcription is the result of two cooperating mechanisms:

1. Firstly, the transcription relies on transcription context $\ctx$ that is formed by:
    1. The local context of the source entity $e$ in its source ontology $\ont{O}$;
    1. The local context of the target entity $e’$ in its source ontology $\ont{O}’$;
    1. The correspondence $\mu = \tuple{ e, e’, \theta }$ as defined in \cref{eq:correspondence}. The correspondence is prescribed and assumed to represent a semantic valid correspondence relation between both concepts;
1. Secondly, the transcriptum $e’$ represents a new theory that is added to $\ont{O}’$. This theory is evaluated by use of the target’s agent interpretation function $\intn’: \ont{O}’ \to \concept{D}’$. The semantic validity of the transcription, therefore, is dependent on whether the transcribendum $\intn(e)$ addresses the same individuals in the DoI as the transcriptum $\intn’(e’)$. 

Since the above transcription context provides for all potential logical circumstances that can occur, we can resolve the question whether or not a transcription is valid generically and independently from the particular ontologies and alignments that are applied by the software agents. The question at hand is whether $\intn(e) \supseteq \intn’(e’)$ holds or not. In case of the former, the transcription is allowed and the mediation will return the transcriptum $e’$; in case of the latter, the mediation will return $\token{null}$. Our task is then to traverse the multidimensional space that is spanned by the transcription context, and for each point in that space consider whether $\intn(e) \supseteq \intn’(e’)$ holds. 

We first consider the transcription of an atomic correspondence $\mu = \tuple{ c, c’, \theta }$. This is simple: since no other concepts are present in the atomic context of the correspondence, the transcriptum $c’$ represents the only potential transcription result $t’$ for transcribendum $c$. This shows an important characteristic of a transcription: With no more information available, a transcription implies a binary choice: either transcribe transcribendum $c$ into the transcriptum $c’$, denoted as $c \vldtranscript{\theta} c’$, or not. This choice depends on whether phantom semantics are induced by the transcription. The result of this strategy is shown in \cref{tab:atomic-class-transcriptions}, where each column specifies the possible correspondence relation that applies. The table presents the transcription results $t’$ as either (i) the transcriptum, which, by absence of induced phantom semantics is necessarily valid, or (ii) no transcription, denoted by \ntsa, because the transcription into the transcriptum would induce phantom semantics.

\begin{table}[h]
  \centering
  \caption{Transcription results $t’$ for the atomic correspondences $\tuple{e, e’, \theta}$: atomic concept $e$ represents the transcribendum and is transcribed under relation $\theta$, taking into consideration that no other concepts are present. The value of the transcription result $t’$ is presented in the table. As indicated, we only address class concepts, resulting in a table with one single row only.}
  \label{tab:atomic-class-transcriptions}
  \begin{tabular}{cc@{\qquad}ccccc}
    \toprule
    \multicolumn{2}{c}{$e \vldtranscript{\theta} e’$} & \multicolumn{5}{c}{Correspondence relation $\theta$} \\ \cmidrule{3-7}
     && $\sqsubset$ 
      & $\equiv$
      & $\sqsupset$
      & $\overlap$ 
      & $\disj$ \\
     \multicolumn{2}{c}{Concept $e$}
      & \includegraphics[width=0.1\textwidth]{src/images/VennBC-Sb.png}
      & \includegraphics[width=0.1\textwidth]{src/images/VennBC-Eq.png}
      & \includegraphics[width=0.1\textwidth]{src/images/VennBC-Sp.png}
      & \includegraphics[width=0.1\textwidth]{src/images/VennBC-nD.png}
      & \includegraphics[width=0.1\textwidth]{src/images/VennBC-Dj.png} \\ \cmidrule(r){1-2} \cmidrule{3-7}
      & $c$     & $c’$        & $c’$     & \ntsa     & \ntsa     & $\neg c’$  \\ \bottomrule
  \end{tabular}
\end{table}

In conclusion, \cref{tab:atomic-class-transcriptions} specifies valid class transcriptions for all atomic correspondences between atomic classes. Unfortunately, two out of five cases prohibit a transcription, a third is rather broad in its transcription, and last but not least, a concept seldom live alone in its ontology.



Due to the inductive characteristic of transcription context, we formulate the question also inductively, as follows:

\begin{mmdef}[Semantic validity of a transcription]\label{def:valid-transcription}
Assume transcribendum $e_n \in \ont{O}$, transcriptum $e_n’ \in \ont{O}’$, correspondence $\mu_n = \tuple{ e_n, e_n’, \theta_n }$, transcription context $\ctx_n = \pair{r, \theta_n, r', \ctx_{n-1}}$ and a semantic valid transcription at one lower level, $\vldtranscript{\theta_{n-1}}$. We denote the transcription result as $t_n’$, and express it inductively as a logical combination of $e_n’$, $e_{n-1}’$ and $\hat{e}_{n-1}’$. Then, we call the transcription \emph{semantically valid} iff:\[
\intn’(t_n’) \subseteq \intn(e_n)
\]
\end{mmdef}

In other words, a transcription is valid if all individuals that potentially belong to the set represented by $e_n$ also belong to the set that can be represented by some logical combination of $e_n’$, $e{n-1}’$ and $\hat{e}_{n-1}’$.


# A cTRS as mediator #
\begin{synopsis}5 pages
3 readers

\end{synopsis}
# The confluence property of the mediator #
\begin{synopsis}Confluence draagt ervoor zorg dat de cTRS termineert, onafhankelijk van het pad dat de rewriting uiteindelijk volgt. Confluence is voor transcripties eenvoudig te bewijzen:

\begin{itemize}
\item Op het laagste inductienivo, het atomische nivo, bestaat er óf wel, óf geen vertaling. Dat termineert dus altijd
\item op inductienivo n zijn voor alle contexten een vertaling gegeven, óf op basis van het eigen nivo n, óf op basis van nivo n-1. Daaruit kan worden geconcludeerd dat de vertaling op nivo n termineert als voor elke context geldt dat:
 \begin{itemize}
  \item er op nivo n een vertaling is gespecificeerd zonder gebruik te maken van nivo n-1;
  \item er op nivo n een vertaling is gespecificeerd gebruik makend van de vertaling nivo n-1, én de vertaling op nivo n-1 termineert;
  \item er op nivo n een verbod bestaat voor vertaling in deze context.
 \end{itemize}
 \item De eerste en derde conditie zijn hetzelfde als op het atomaire nivo, en termineren. 
 \item De tweede conditie termineert omdat er geen andere contexten en nivo's bestaan dan hier geschetst die niet termineren.
\end{itemize}

\end{synopsis}
# Related work #
\begin{synopsis}1-2 pages
10 readers

\end{synopsis}
# Conclusions and further work #
\begin{synopsis}1/2 page

\end{synopsis}
# References {-} 